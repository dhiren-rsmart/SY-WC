<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="businessRuleBindings" type="smART.MVC.Library.BusinessRules.BusinessRuleSection, smART.MVC.Library" />
    <section name="quartz" type="System.Configuration.NameValueSectionHandler" />
  </configSections>
  <appSettings>
    <add key="ServiceUrl" value="https://www.leadsonline.com/leads/ws/scrap/ticketScrapWS.asmx?WSDL" />
    <!--Riveras-->
    <!--    
    <add key="ServiceUser" value= "riverastx"/>
    <add key="ServiceUserPwd" value="txriveras"/>
    <add key="StoreId" value= "7225"/>-->
    <!--USASCRAPMETAL-->
    <add key="ServiceUser" value="usascrap" />
    <add key="ServiceUserPwd" value="scrapusa" />
    <add key="StoreId" value="43996" />
    <add key="Clerk" value="Singh" />
    <!--Texas Metals-->
    <!--
    <add key="ServiceUser" value= "texmetales"/>
    <add key="ServiceUserPwd" value="metalestex"/>
    <add key="StoreId" value= "17313"/>-->
    <add key="RsmARTDocPath" value="c:\temp" />
    <add key="smARTDocPath" value="\\GAYATRI-PC\Shared" />
    <add key="smARTTempDocPath" value="smARTDocPath\Temp\Attachments" />
  </appSettings>
  <connectionStrings>
    <add name="smARTDBContext" connectionString="Data Source=.;Initial Catalog=Rsmart-SY-USA;Integrated Security=true;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1" />
  </startup>
  <!-- EntLib Exception Handling Begin -->
  <exceptionHandling>
    <exceptionPolicies>
      <add name="DataPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add Title="An error has occurred while processing your request. Please contact your system administrator for help." Category="Data" type="smART.Common.ExceptionLoggingHandler, smART.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ExceptionLoggingHandler" />
              <add name="Wrap Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessage="An error has occurred while processing your request. Please contact your system administrator for help." wrapExceptionType="smART.Model.DataException, smART.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="BusinessRulesPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add Title="An error has occurred while processing your request. Please contact your system administrator for help." Category="BusinessRules" type="smART.Common.ExceptionLoggingHandler, smART.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ExceptionLoggingHandler" />
              <add name="Wrap Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessage="An error has occurred while processing your request. Please contact your system administrator for help." wrapExceptionType="smART.Business.BusinessRulesException, smART.Business, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="LibraryPolicy">
        <exceptionTypes>
          <add name="DataException" type="smART.Model.DataException, smART.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" postHandlingAction="NotifyRethrow">
            <exceptionHandlers>
              <add name="Wrap Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" wrapExceptionType="smART.Library.LibraryException, smART.MVC.Library, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
            </exceptionHandlers>
          </add>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add Title="An error has occurred while processing your request. Please contact your system administrator for help." Category="Library" type="smART.Common.ExceptionLoggingHandler, smART.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ExceptionLoggingHandler" />
              <add name="Wrap Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessage="An error has occurred while processing your request. Please contact your system administrator for help." wrapExceptionType="smART.Library.LibraryException, smART.MVC.Library, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="PresentPolicy">
        <exceptionTypes>
          <add name="LibraryException" type="smART.Library.LibraryException, smART.MVC.Library, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" postHandlingAction="NotifyRethrow" />
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add Title="An error has occurred while processing your request. Please contact your system administrator for help." Category="Present" type="smART.Common.ExceptionLoggingHandler, smART.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ExceptionLoggingHandler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <!-- EntLib Exception Handling End -->
  <!-- EntLib Logging Begin -->
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="Data">
    <listeners>
      <add name="DataRollingFlatFileTraceListener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="Log\DataError.log" formatter="ErrorTextFormatter" rollFileExistsBehavior="Increment" rollInterval="Day" />
      <add name="LibraryRollingFlatFileTrace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="Log\LibraryError.log" formatter="ErrorTextFormatter" rollFileExistsBehavior="Increment" rollInterval="Day" />
      <add name="BusRulesRollingFlatFileTraceListener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="Log\BusRulesError.log" formatter="ErrorTextFormatter" rollFileExistsBehavior="Increment" rollInterval="Day" />
      <add name="PresentRollingFlatFileTrace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="Log\PresentError.log" formatter="ErrorTextFormatter" rollFileExistsBehavior="Increment" rollInterval="Day" />
      <add name="EmailRollingFlatFileTraceListener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="Log\Email.log" formatter="ErrorTextFormatter" rollFileExistsBehavior="Increment" rollInterval="Day" />
      <add name="ScannerRollingFlatFileTraceListener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="Log\Scan.log" formatter="ErrorTextFormatter" rollFileExistsBehavior="Increment" rollInterval="Day" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="Timestamp : {timestamp(local)}{newline} Title     : {title}{newline} Message   : {message}{newline} Category  : {category}{newline} Priority  : {priority}{newline} Severity  : {severity}{newline} {dictionary({key}  : {value}{newline})}" name="ErrorTextFormatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="Data">
        <listeners>
          <add name="DataRollingFlatFileTraceListener" />
        </listeners>
      </add>
      <add switchValue="All" name="Library">
        <listeners>
          <add name="LibraryRollingFlatFileTrace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="BusinessRules">
        <listeners>
          <add name="BusRulesRollingFlatFileTraceListener" />
        </listeners>
      </add>
      <add switchValue="All" name="Present">
        <listeners>
          <add name="PresentRollingFlatFileTrace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="Email">
        <listeners>
          <add name="EmailRollingFlatFileTraceListener" />
        </listeners>
      </add>
      <add switchValue="All" name="Scanner">
        <listeners>
          <add name="ScannerRollingFlatFileTraceListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings" />
    </specialSources>
  </loggingConfiguration>
  <!-- EntLib Logging End -->
  <!-- Quartz Begin -->
  <quartz>
    <!-- configure Thread Pool -->
    <add key="quartz.threadPool.type" value="Quartz.Simpl.SimpleThreadPool, Quartz" />
    <add key="quartz.threadPool.threadCount" value="10" />
    <add key="quartz.threadPool.threadPriority" value="Normal" />
    <!-- configure Job Store -->
    <add key="quartz.jobStore.misfireThreshold" value="60000" />
    <add key="quartz.jobStore.type" value="Quartz.Simpl.RAMJobStore, Quartz" />
    <!-- configure scheduler -->
    <add key="quartz.scheduler.instanceName" value="MSMQScheduler" />
    <!-- configure jobs and triggers definition -->
    <add key="quartz.plugin.xml.type" value="Quartz.Plugin.Xml.XMLSchedulingDataProcessorPlugin, Quartz" />
    <add key="quartz.plugin.xml.fileNames" value="~/Config/Jobs.xml" />
    <add key="quartz.plugin.xml.scanInterval" value="10" />
  </quartz>
  <!-- Quartz End -->
  <businessRuleBindings>
    <businessRules>
      <!--Party-->
      <!--Scale-->
      <add key="Scale_Adding" className="ScaleLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.Scale, smART.Business" />
      <add key="Scale_Modifing" className="ScaleLibrary" eventName="Modifying" methodName="Modifying" type="smART.Business.Rules.Scale, smART.Business" />
      <add key="Scale_Added" className="ScaleLibrary" eventName="Added" methodName="Added" type="smART.Business.Rules.Scale, smART.Business" />
      <add key="Scale_Modified" className="ScaleLibrary" eventName="Modified" methodName="Modified" type="smART.Business.Rules.Scale, smART.Business" />
      <add key="Scale_GotSingle" className="ScaleLibrary" eventName="GotSingle" methodName="GotSingle" type="smART.Business.Rules.Scale, smART.Business" />
      <!--ScaleDetails-->
      <!--<add key="ScaleDetails_Added" className="ScaleDetailsLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.ScaleDetails, smART.Business" />
      <add key="ScaleDetails_Modified" className="ScaleDetailsLibrary" eventName="Modifying" methodName="Modifying" type="smART.Business.Rules.ScaleDetails, smART.Business" />
      <add key="ScaleDetails_Deleting" className="ScaleDetailsLibrary" eventName="Deleting" methodName="Deleting" type="smART.Business.Rules.ScaleDetails, smART.Business" />-->
      <add key="ScaleDetails_Added" className="ScaleDetailsLibrary" eventName="Added" methodName="Added" type="smART.Business.Rules.ScaleDetails, smART.Business" />
      <add key="ScaleDetails_Modified" className="ScaleDetailsLibrary" eventName="Modified" methodName="Modified" type="smART.Business.Rules.ScaleDetails, smART.Business" />
      <add key="ScaleDetails_Deleting" className="ScaleDetailsLibrary" eventName="Deleting" methodName="Deleting" type="smART.Business.Rules.ScaleDetails, smART.Business" />
      <!--DispatcherRequest-->
      <add key="DispatcherRequest_Added" className="DispatcherRequestLibrary" eventName="Added" methodName="Added" type="smART.Business.Rules.DispatcherRequest, smART.Business" />
      <add key="DispatcherRequest_Modified" className="DispatcherRequestLibrary" eventName="Modified" methodName="Modified" type="smART.Business.Rules.DispatcherRequest, smART.Business" />
      <add key="DispatcherRequest_GotSingle" className="DispatcherRequestLibrary" eventName="GotSingle" methodName="GotSingle" type="smART.Business.Rules.DispatcherRequest, smART.Business" />
      <add key="DispatcherRequest_Adding" className="DispatcherRequestLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.DispatcherRequest, smART.Business" />
      <add key="DispatcherRequest_Modifing" className="DispatcherRequestLibrary" eventName="Modifying" methodName="Modifying" type="smART.Business.Rules.DispatcherRequest, smART.Business" />
      <!--Booking-->
      <add key="Booking_GotSingle" className="BookingLibrary" eventName="GotSingle" methodName="GotSingle" type="smART.Business.Rules.Booking, smART.Business" />
      <add key="Booking_Adding" className="BookingLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.Booking, smART.Business" />
      <!--Container-->
      <add key="Container_GotMultiple" className="ContainerLibrary" eventName="GotMultiple" methodName="GotMultiple" type="smART.Business.Rules.Container, smART.Business" />
      <add key="Container_Adding" className="ContainerLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.Container, smART.Business" />
      <!--Settlement-->
      <add key="Settlement_Added" className="SettlementLibrary" eventName="Added" methodName="Added" type="smART.Business.Rules.Settlement, smART.Business" />
      <add key="Settlement_Delete" className="SettlementLibrary" eventName="Deleted" methodName="Deleted" type="smART.Business.Rules.Settlement, smART.Business" />
      <!--For QScale Start-->
      <!--<add key="SettlementDetails_Added" className="SettlementDetailsLibrary" eventName="Added" methodName="Added" type="smART.Business.Rules.SettlementDetails, smART.Business" />
      <add key="SettlementDetails_Delete" className="SettlementDetailsLibrary" eventName="Deleted" methodName="Deleted" type="smART.Business.Rules.SettlementDetails, smART.Business" />-->
      <!--For QScale End-->
      <!--SalesOrder-->
      <add key="SalesOrder_Adding" className="SalesOrderLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.SalesOrder, smART.Business" />
      <!--PurchaseOrder-->
      <add key="PurchseOrder_Adding" className="PurchaseOrderLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.PurchaseOrder, smART.Business" />
      <!--Payment-->
      <add key="Payment_GotSingle" className="PaymentReceiptLibrary" eventName="GotSingle" methodName="GotSingle" type="smART.Business.Rules.Payment, smART.Business" />
      <!--Payment Details-->
      <add key="PaymentReceiptDetails_Added" className="PaymentReceiptDetailsLibrary" eventName="Added" methodName="Added" type="smART.Business.Rules.PaymentDetails, smART.Business" />
      <add key="PaymentReceiptDetails_Modified" className="PaymentReceiptDetailsLibrary" eventName="Modified" methodName="Modified" type="smART.Business.Rules.PaymentDetails, smART.Business" />
      <add key="PaymentReceiptDetails_Deleted" className="PaymentReceiptDetailsLibrary" eventName="Deleted" methodName="Deleted" type="smART.Business.Rules.PaymentDetails, smART.Business" />
      <!--Invoice-->
      <add key="Invoice_GotMultiple" className="InvoiceLibrary" eventName="GotMultiple" methodName="GotMultiple" type="smART.Business.Rules.Invoice, smART.Business" />
      <add key="Invoice_Added" className="InvoiceLibrary" eventName="Added" methodName="Added" type="smART.Business.Rules.Invoice, smART.Business" />
      <add key="Invoice_Delete" className="InvoiceLibrary" eventName="Deleted" methodName="Deleted" type="smART.Business.Rules.Invoice, smART.Business" />
      <!--AssetAudit-->
      <add key="AssetAudit_Adding" className="AssetAuditLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.AssetAudit, smART.Business" />
      <!--Price List-->
      <add key="PriceList_Adding" className="PriceListLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.PriceList, smART.Business" />
      <add key="PriceList_Modifing" className="PriceListLibrary" eventName="Modifying" methodName="Modifying" type="smART.Business.Rules.PriceList, smART.Business" />
      <!--Cash-->
      <add key="Cash_Adding" className="CashLibrary" eventName="Adding" methodName="Adding" type="smART.Business.Rules.Cash, smART.Business" />
      <add key="Cash_Modifing" className="CashLibrary" eventName="Modifying" methodName="Modifying" type="smART.Business.Rules.Cash, smART.Business" />
      <!--<add key="Scale_GotSingle" className="CashLibrary" eventName="GotSingle" methodName="GotSingle" type="smART.Business.Rules.Cash, smART.Business" />-->
    </businessRules>
  </businessRuleBindings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Deployment" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>